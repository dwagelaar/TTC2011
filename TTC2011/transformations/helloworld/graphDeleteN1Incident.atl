-- @atlcompiler emftvm
-- @path Graph=/TTC2011/metamodels/graph.ecore
module graphDeleteN1Incident;

create OUT : Graph from IN : Graph;

--
-- Helpers
--

helper context Graph!Edge def : linksToN1 : Boolean =
	self.src.isN1 or self.trg.isN1;

helper context OclAny def : isN1 : Boolean =
	false;

helper context Graph!Node def : isN1 : Boolean =
	self.name = 'n1';

--
-- Rules
--

rule Graph {
	from s : Graph!Graph
	to t : Graph!Graph (
		nodes <- s.nodes->reject(n | n.isN1),
		edges <- s.edges->reject(e | e.linksToN1))
}

rule Node {
	from s : Graph!Node (not s.isN1)
	to t : Graph!Node (
		name <- s.name)
}

rule Edge {
	from s : Graph!Edge (not s.linksToN1)
	to t : Graph!Edge (
		src <- s.src,
		trg <- s.trg)
}